datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  role      String   @default("user")
  status    String   @default("active")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  customers Customer[]
  orders    Order[]
  
  @@index([email])
  @@map("users")
}

model Customer {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  phone     String?
  company   String?
  status    String   @default("active")
  type      String   @default("regular")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user           User?           @relation(fields: [userId], references: [id])
  userId         String?
  orders         Order[]
  tags           Tag[]
  communications Communication[]

  @@index([email, status])
  @@map("customers")
}

model Order {
  id        String   @id @default(cuid())
  total     Float
  status    String   @default("pending")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  items OrderItem[]
  tags  Tag[]

  @@index([customerId, status])
  @@map("orders")
}

model OrderItem {
  id        String   @id @default(cuid())
  quantity  Int
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  order   Order  @relation(fields: [orderId], references: [id])
  orderId String

  product   Product @relation(fields: [productId], references: [id])
  productId String

  @@map("order_items")
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String?
  price       Float
  status      String   @default("active")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  orderItems OrderItem[]
  tags       Tag[]

  @@map("products")
}

model Tag {
  id          String   @id @default(cuid())
  name        String
  color       String?
  description String?
  type        TagType?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  products       Product[]
  customers      Customer[]
  communications Communication[]
  orders         Order[]

  @@index([name, type])
}

enum TagType {
  product
  customer
  communication
  order
}

model Communication {
  id        String   @id @default(cuid())
  type      String
  content   String
  direction String
  status    String   @default("pending")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String

  tags       Tag[]

  @@index([customerId, type, status])
  @@map("communications")
}